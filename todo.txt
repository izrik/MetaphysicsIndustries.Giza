full analysis and tests for Spanner, Tokenizer, Parser
full analysis and tests for other classes
Rename DefinitionRenderer to GrammarRenderer, rename methods, make it take a Grammar instead of Definition[].
tokenized parsing
Define a grammar for Solus. Create a SolusGrammar class.
Create a SolusSpanner class around SolusGrammar. Put both classes into MetaphysicsIndustries.Solus.
Convert all lists and arrays to IEnumerable<> ?
DefinitionChecker
  rename to GrammarChecker ?
  check that all defrefs point to defs in the same grammar
  check for duplicate names
  more thorough analysis
SpanChecker
  more thorough analysis
re-org and add docs
DefinitionRenderer - render to grammar text
Move rendering classes to a separate 'Rendering' assembly, and/or move classes for parsing into a 'Light' assembly.
user-defined reductions
operate on streams

clarify what 'mind whitespace' and 'atomic' do on tokens, subtokens, and comments, if anything
    what are the defaults?
clarify what 'mind whitespace', 'ignore case' and 'atomic' directives do on non-tokenized defs
    should affect only implicits
more tests for above
repl
